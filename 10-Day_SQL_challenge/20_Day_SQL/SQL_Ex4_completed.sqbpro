-- 5.1 Select the name of all the pieces. 
--SELECT * 
--FROM Pieces;



-- 5.2  Select all the providers' data. 
--SELECT * FROM Providers;



-- 5.3 Obtain the average price of each piece (show only the piece code and the average price).
--SELECT Pieces.Code, AVG(Price) as Price_average
-- FROM Provides
--JOIN Pieces 
--ON Pieces.Code = Provides.Piece 
--GROUP BY Pieces.Code
;



-- 5.4  Obtain the names of all providers who supply piece 1 (sprockets).
SELECT Provider,Name,Pieces.Code 
FROM Provides
JOIN Pieces
ON Pieces.Code = Provides.Piece
WHERE Pieces.Code = 1
;



-- 5.5 Select the name of pieces provided by the provider with code "HAL".
SELECT Pieces.Name
FROM Provides
JOIN Pieces
ON Pieces.Code = Provides.Piece
JOIN Providers
ON Providers.Code = Provides.Provider
WHERE Providers.Code = 'HAL'
;

-- 5.6 Add an entry to the database to indicate that "Skellington Supplies"
-- (code "TNBC") will provide sprockets (code "1") for 15 cents each.

INSERT INTO Provides(Piece, Provider, Price) VALUES(1,'TNBC',15);


-- 5.7 For each piece, find the most expensive offering of that piece
-- and include the piece name, provider name, and price 
--(OPTIONAL: As there could be more than one provider 
--who supply the same piece at the most expensive price, 
SELECT Pieces.Name, Provides.Price
FROM Provides
JOIN Pieces
ON Pieces.Code = Provides.Piece
JOIN Providers
ON Providers.Code = Provides.Provider
WHERE Providers.Code = 'HAL'


;
SELECT Name, Provider, MAX(Price) AS max_price
FROM Provides
JOIN Pieces ON Provides.Piece = Pieces.Code
GROUP BY Piece
;
WITH max_prices AS (
    SELECT Piece, MAX(Price) AS max_price
    FROM Provides
    GROUP BY Piece
)
SELECT p.Name AS piece_name, pr.Provider AS provider_name, pr.Price AS price
FROM max_prices mp
JOIN Provides pr ON mp.Piece = pr.Piece AND mp.max_price = pr.Price
JOIN Pieces p ON pr.Piece = p.Code;

 -- show all providers who supply at the most expensive price).
--SELECT Providers.Name,Provides.Price
--FROM Provides
--ORDER BY Provides.Piece DESC
--JOIN Pieces
--ON Pieces.Code = Provides.Piece
--JOIN Providers
--ON Providers.Code = Provides.Provider

;

-- 5.8 Increase all prices by one cent.
--SELECT Price + 0.01 FROM Provides

;
--UPDATE Provides
--SET Price = Price + 0.01
;

-- 5.9 Update the database to reflect that "Susan Calvin Corp." (code "RBT") will not supply bolts (code 4).
--Providers - Name
--Code - RBT
--Provides - Bolts (Code 4)

--DELETE FROM Provides
--WHERE Provides.Provider = 'RBT' AND Provides.Piece = '4';


-- 5.10 Update the database to reflect that "Susan Calvin Corp." (code "RBT") will not supply any pieces (the provider should still remain in the database).
--INSERT INTO Providers(Code, Name) VALUES('RBT','Susan Calvin Corp.');
--DELETE FROM Provides
--WHERE Provides.Provider = 'RBT';

