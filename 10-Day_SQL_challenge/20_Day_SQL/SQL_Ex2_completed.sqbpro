<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="20Day_SQL_Task1.db" readonly="0" foreign_keys="0" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser query pragmas" current="2"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="982"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Employees" custom_title="0" dock_id="1" table="4,9:mainEmployees"/><dock_state state="000000ff00000000fd00000001000000020000033b00000276fc0100000001fb000000160064006f0063006b00420072006f007700730065003101000000000000033b0000011800ffffff0000033b0000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Departments" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="36"/><column index="2" value="124"/><column index="3" value="54"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Employees" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="78"/><column index="2" value="78"/><column index="3" value="78"/><column index="4" value="75"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Create Tables Commands">--Create tables
CREATE TABLE IF NOT EXISTS Departments (
  Code INTEGER,
  Name TEXT NOT NULL,
  Budget decimal NOT NULL,
  PRIMARY KEY (Code)   
);

CREATE TABLE IF NOT EXISTS Employees (
  SSN INTEGER,
  Name varchar(255) NOT NULL ,
  LastName varchar(255) NOT NULL ,
  Department INTEGER NOT NULL , 
  PRIMARY KEY (SSN)   
);


INSERT INTO Departments(Code,Name,Budget) VALUES(14,'IT',65000);
INSERT INTO Departments(Code,Name,Budget) VALUES(37,'Accounting',15000);
INSERT INTO Departments(Code,Name,Budget) VALUES(59,'Human Resources',240000);
INSERT INTO Departments(Code,Name,Budget) VALUES(77,'Research',55000);

INSERT INTO Employees(SSN,Name,LastName,Department) VALUES('123234877','Michael','Rogers',14);
INSERT INTO Employees(SSN,Name,LastName,Department) VALUES('152934485','Anand','Manikutty',14);
INSERT INTO Employees(SSN,Name,LastName,Department) VALUES('222364883','Carol','Smith',37);
INSERT INTO Employees(SSN,Name,LastName,Department) VALUES('326587417','Joe','Stevens',37);
INSERT INTO Employees(SSN,Name,LastName,Department) VALUES('332154719','Mary-Anne','Foster',14);
INSERT INTO Employees(SSN,Name,LastName,Department) VALUES('332569843','George','ODonnell',77);
INSERT INTO Employees(SSN,Name,LastName,Department) VALUES('546523478','John','Doe',59);
INSERT INTO Employees(SSN,Name,LastName,Department) VALUES('631231482','David','Smith',77);
INSERT INTO Employees(SSN,Name,LastName,Department) VALUES('654873219','Zacary','Efron',59);
INSERT INTO Employees(SSN,Name,LastName,Department) VALUES('745685214','Eric','Goldsmith',59);
INSERT INTO Employees(SSN,Name,LastName,Department) VALUES('845657245','Elizabeth','Doe',14);
INSERT INTO Employees(SSN,Name,LastName,Department) VALUES('845657246','Kumar','Swamy',14);</sql><sql name="Commands*">--TABLES:
--Employees
--Departments

-- 2.1 Select the last name of all employees.
	--SELECT LastName FROM Employees

-- 2.2 Select the last name of all employees, without duplicates.
	--SELECT DISTINCT LastName FROM Employees

-- 2.3 Select all the data of employees whose last name is &quot;Smith&quot;.
	--SELECT * FROM Employees WHERE LastName = 'Smith'

-- 2.4 Select all the data of employees whose last name is &quot;Smith&quot; or &quot;Doe&quot;.
	--SELECT * FROM Employees WHERE LastName = 'Smith' or LastName = 'Doe'

-- 2.5 Select all the data of employees that work in department 14.
	--SELECT * FROM Employees WHERE Department = '14'

-- 2.6 Select all the data of employees that work in department 37 or department 77.
	--SELECT * FROM Employees WHERE Department = '37' or Department = '77'

-- 2.7 Select all the data of employees whose last name begins with an &quot;S&quot;.
	--SELECT * FROM Employees WHERE LastName LIKE 'S%'

-- 2.8 Select the sum of all the departments' budgets.
	--SELECT SUM(Budget) FROM Departments;

-- 2.9 Select the number of employees in each department (you only need to show the department code and the number of employees).
	--SELECT COUNT (*) FROM Employees GROUP BY Department 
		--how do you show department code and name as well in combination with this answer without making a crazy long code for an extra table then joining?

-- 2.10 Select all the data of employees, including each employee's department's data.
	--SELECT * 
	--FROM Employees
	--INNER JOIN Departments
	--ON Departments.Code = Employees.Department
	--;

-- 2.11 Select the name and last name of each employee, along with the name and budget of the employee's department.
	--SELECT Employees.Name, Employees.LastName,Departments.Name, Departments.Budget
	--FROM Employees
	--INNER JOIN Departments
	--ON Departments.Code = Employees.Department
	--;

-- 2.12 Select the name and last name of employees working for departments with a budget greater than $60,000.
	--SELECT Employees.Name, Employees.LastName, Departments.Budget
	--FROM Employees
	--INNER JOIN Departments
	--ON Departments.Code = Employees.Department
	--WHERE Departments.Budget &gt;= '60000'
	--;

-- 2.13 Select the departments with a budget larger than the average budget of all the departments.
	--SELECT *
	--FROM 
	--Departments
	--WHERE Budget &lt; '93750'
	--;
	--93750 is average, avg aggregate wont work with &gt;&lt; operators for some reason, good question, internet couldnt give a good answer.
	-- Can always pipe count into this call, but a bit long winded

-- 2.14 Select the names of departments with more than two employees.
	--SELECT COUNT(*) N_of_Employees,Departments.Name
	--FROM Employees
	--JOIN Departments
	--ON  Departments.Code = Employees.Department
	--GROUP BY Department
	--;

-- 2.15 Select the name and last name of employees working for the two departments with lowest budget.
	--SELECT Employees.Name,Employees.LastName,Employees.Department, Departments.Budget 
	--FROM Employees
	--INNER JOIN Departments
	--ON Employees.Department = Departments.Code
	--ORDER BY
	--Departments.Budget ASC
	--LIMIT 2
	--;

-- 2.16  Add a new department called &quot;Quality Assurance&quot;, with a budget of $40,000 and departmental code 11. 
	--INSERT INTO Departments(Code,Name,Budget) VALUES(11,'Quality Assurance ',40000);

	-- And Add an employee called &quot;Mary Moore&quot; in that department, with SSN 847-21-9811.
	--INSERT INTO Employees(SSN,Name,LastName,Department) VALUES('847219811','Mary','Moore',11);

-- 2.17 Reduce the budget of all departments by 10%.
	--UPDATE Departments
	--SET Budget = Budget*0.9;

-- 2.18 Reassign all employees from the Research department (code 77) to the IT department (code 14).
--CHANGE ALL EMPLOYEE CODES FROM 77 TO 14

	--UPDATE Employees
	--SET Department = 14
	--WHERE Department = 77 ; 

-- 2.19 Delete from the table all employees in the IT department (code 14).
	--DELETE FROM Employees
	--WHERE Department = 14;

-- 2.20 Delete from the table all employees who work in departments with a budget greater than or equal to $60,000.
--GET DEPARTMENT NAMES WITH BIG BUDGETS THEN DELETE Employees
	--DELETE FROM Employees
	--WHERE 
	--Departments.Budget &gt;= 60000;
	--DELETE FROM Employees
	--WHERE 
	--Employees.Department IN (SELECT DISTINCT Employees.Department FROM Employees
	--INNER JOIN Departments
	--ON Employees.Department = Departments.Code
	--WHERE Departments.Budget &gt;= 60000)
	--;

--HUMAN RESOURCES

-- 2.21 Delete from the table all employees.
--DELETE FROM Employees
</sql><current_tab id="1"/></tab_sql></sqlb_project>
